{"version":3,"file":"static/js/21.9445edaa.chunk.js","mappings":"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","sources":["components/interface/Dialog.jsx"],"sourcesContent":["// React\r\nimport { useState, useEffect, useContext, lazy, Suspense } from \"react\";\r\n// Firestore\r\nimport { db } from \"components/App\";\r\n// Utilities\r\nimport { populateEvent } from \"scripts/utilities\";\r\nimport { getEvents } from \"scripts/events\";\r\n// Events\r\nimport { deleteEvent, copy } from \"scripts/events\";\r\n// Context\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { CountContext } from \"context/CountContext\";\r\n\r\nconst DialogBlueprint = lazy(() => import(\"./DialogBlueprint\"));\r\nconst Button = lazy(() => import(\"./Button\"));\r\n\r\nconst worker = new Worker(\"worker.js\");\r\nworker.postMessage([\"dialog\"]);\r\n\r\nexport default function Dialog(props) {\r\n    const id = useContext(AuthContext);\r\n    const { type } = props;\r\n    let dialog = null;\r\n\r\n    if (type === \"login\") dialog = (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            <DialogBlueprint \r\n                id=\"dialog\"\r\n                p=\"dialog-text\"\r\n                btn=\"dialog-btn\"\r\n            />\r\n        </Suspense>\r\n    );\r\n    if (type === \"text\") dialog = (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            <DialogBlueprint \r\n                id=\"dialog-login\"\r\n                p=\"dialog-login-text\"\r\n                btn=\"dialog-login-btn\"\r\n            />\r\n        </Suspense>\r\n    );\r\n    if(type === \"success\") dialog = (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            <DialogBlueprint\r\n                id=\"dialog-success\"\r\n                p=\"dialog-success-text\"\r\n                btn=\"dialog-success-btn\"\r\n            />\r\n        </Suspense>\r\n    );\r\n    if(type === \"error\") dialog = (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            <DialogBlueprint\r\n                id=\"dialog-error\"\r\n                p=\"dialog-error-text\"\r\n                btn=\"dialog-error-btn\"\r\n            />\r\n        </Suspense>\r\n    );\r\n    if(type === \"share\") dialog = (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n            <DialogBlueprint\r\n                id=\"dialog-share\"\r\n                p=\"dialog-share-text\"\r\n                btn=\"dialog-share-btn\"\r\n            />\r\n        </Suspense>\r\n    );\r\n\r\n    // Events dialog\r\n\r\n    const [numeral, setNumeral] = useState(0);\r\n    const documentCount = useContext(CountContext);\r\n\r\n    function decrementNumeral() {\r\n        if (numeral !== 0)\r\n            setNumeral(numeral - 1);\r\n    }\r\n    function incrementNumeral() {\r\n        if (numeral !== documentCount - 1)\r\n            setNumeral(numeral + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const eventList = getEvents(db, id);\r\n        populateEvent(eventList, numeral)\r\n    }, [numeral, id]);\r\n\r\n    if(type === \"event\") dialog = (\r\n        <dialog id=\"dialog-event\" className=\"dialog dialog-event\">\r\n            <div onClick={function () {\r\n                deleteEvent(numeral, id);\r\n                const dialog = document.getElementById(\"dialog-event\");\r\n                dialog.close();\r\n            }}>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <Button message=\"Delete\" id=\"delete-btn\" />\r\n                </Suspense>\r\n            </div>\r\n            <div onClick={function () {\r\n                const name = \r\n                    document.querySelector(\"#events-name\").innerText;\r\n                const date = \r\n                    document.querySelector(\"#events-date\").innerText;\r\n                const description = \r\n                    document.querySelector(\"#events-description\").innerText;\r\n                \r\n                copy(name, date, description);\r\n            }}>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <Button message=\"Share\" id=\"share-btn\" />\r\n                </Suspense>\r\n            </div>\r\n\r\n            <h1 className=\"heading\" id=\"events-name\"> </h1>\r\n\r\n            <section className=\"event-line\">\r\n                <span className=\"icon\">calendar_month</span>\r\n                <p className=\"description\" id=\"events-date\"></p>\r\n            </section>\r\n\r\n            <section className=\"event-line\">\r\n                <span className=\"icon\">distance</span>\r\n                <p className=\"description\" id=\"events-distance\"></p>\r\n            </section>\r\n\r\n            <section className=\"event-line\">\r\n                <span className=\"icon\">sms</span>\r\n                <p className=\"description\" id=\"events-description\"></p>\r\n            </section>\r\n\r\n            <section className=\"event-line\">\r\n                <span className=\"icon\">tag</span>\r\n                <p className=\"description\" id=\"events-count\">\r\n                    You are browsing {numeral + 1}/{documentCount} event\r\n                </p>\r\n            </section>\r\n\r\n            <div className=\"arrow-navigation-container\">\r\n                <button className=\"arrow-btn\" onClick={decrementNumeral}>\r\n                    <span className=\"icon arrow\">arrow_back</span>\r\n                </button>\r\n                <button className=\"arrow-btn\" onClick={incrementNumeral}>\r\n                    <span className=\"icon arrow\">arrow_forward</span>\r\n                </button>\r\n            </div>\r\n            \r\n            <form method=\"dialog\">\r\n                <button\r\n                    className=\"dialog-close btn dialog-event-btn\"\r\n                ></button>\r\n            </form>\r\n        </dialog>\r\n    );\r\n\r\n    return (\r\n        <div className=\"dialog-container\">{dialog}</div>\r\n    );\r\n}\r\n"],"names":["DialogBlueprint","lazy","Button","Dialog","props","id","useContext","AuthContext","type","dialog","Suspense","fallback","p","btn","useState","numeral","setNumeral","documentCount","CountContext","useEffect","eventList","getEvents","db","populateEvent","className","onClick","deleteEvent","document","getElementById","close","message","name","querySelector","innerText","date","description","copy","method","Worker","postMessage"],"sourceRoot":""}